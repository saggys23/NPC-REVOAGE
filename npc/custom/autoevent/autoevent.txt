//==================================
//-- Reward Function
//==================================

function	script	Func_Prizes	{
	announce "Congrats "+strcharinfo(0,getarg(0))+", a winner in the "+getarg(1)+" Event.",bc_all|bc_blue;
	if(!getattachedrid())
		attachrid(getcharid(3,strcharinfo(0,getarg(0))),1);
	
	//WonEvents++;
	//MWonEvents++;
	if($@Mail){
		mail getarg(0), "no-reply", getarg(1), "Congratulations!% You have won in the "+getarg(1)+" % % % [ Your reward is attached. ]", $@RewardZeny, $@RewardID, $@RewardQNT;
		query_sql("UPDATE `mail` SET message = REPLACE(message,'%',CHAR(13)) WHERE send_name = 'no-reply'");
	} else {
		getitem $@RewardID,$@RewardQNT;
		//zeny += $@RewardZeny;
	}
	return;
}

-	script	Event Information	-1,{
	function Func_Countdown;
	function Func_Add_Time;
	freeloop(1);
	
//==================================
OnJoinEvent:	//-- Join Event
//==================================

	if($@CurrentEvent < 1){
		mes "[ Event Management ]","Sorry no event is running.";
		close;
	} else {
		.@c = checkhomcall();
		mes "[ "+ .EventName$[$@CurrentEvent] +" ]","Want to join the "+ .ColorName$[$@CurrentEvent] +"?";
		if($@CurrentEvent == 2 )
			mes "[ "+ .EventName$[$@CurrentEvent] +" ]","Must be a Novice Level 10/10 or lower.";
		if($@CurrentEvent == 5 || $@CurrentEvent == 6 || $@CurrentEvent == 7)
			mes "[ "+ .EventName$[$@CurrentEvent] +" ]","Will have any Carts or Pets Removed.";
		if(select("Yes:No") == 2)
			mes "[ "+ .EventName$[$@CurrentEvent] +" ]","Ok come back later.",bc_self|bc_blue;
		else if((Baselevel > 10 || JobLevel > 10 || Class != Job_Novice ) && ($@CurrentEvent == 2 || $@CurrentEvent <= 16))
			mes "[ "+ .EventName$[$@CurrentEvent] +" ]","Sorry you must be a Novice Level 10/10 or lower.";
		else if (checkvending()) 
			mes "[ "+ .EventName$[$@CurrentEvent] +" ]","Close your shop first.";
		else if($@CurrentEvent < 1)
			mes "[ Event Management ]","Sorry event closed before you hit yes.";
		else if(.@c != 1 && .@c != -1 && ($@CurrentEvent == 2 || $@CurrentEvent == 6 || $@CurrentEvent == 9 || $@CurrentEvent == 16))
			mes "[ "+ .EventName$[$@CurrentEvent] +" ]","No homunculus allowed, put it away before joining.";
		else {
			if($@CurrentEvent >= 5 && $@CurrentEvent <= 9 || $@CurrentEvent <= 16){
				if(checkmadogear()){
						next;
						mes "[ Event Management ]","Seems you're mounted/have falcon, remove you're mount and come back.";
						close;
				}
				if(checkdragon()){
						next;
						mes "[ Event Management ]","Seems you're mounted/have falcon, remove you're mount and come back.";
						close;
				}			
				if(checkwug()){
						next;
						mes "[ Event Management ]","Seems you're mounted/have falcon, remove you're mount and come back.";
						close;
				}
				if(ismounting()){
						next;
						mes "[ Event Management ]","Seems you're mounted/have falcon, remove you're mount and come back.";
						close;
				}
				if(checkriding()){
						next;
						mes "[ Event Management ]","Seems you're mounted/have falcon, remove you're mount and come back.";
						close;
				}
				if(checkfalcon()){
						next;
						mes "[ Event Management ]","Seems you're mounted/have falcon, remove you're mount and come back.";
						close;
				}
				if(geteleminfo(1) > 0)
					unitkill geteleminfo(1);
				callfunc("remove_buff");
			} else if($@CurrentEvent == 2 || $@CurrentEvent <= 16)
				callfunc("remove_buff");
			.register_aid[ .register_count ] = getcharid(3);
			nude;
			.register_count++;
			if($@CurrentEvent == 13){
				delitem .candy_id, countitem( .candy_id );
				delitem .apple_id, countitem( .apple_id );
			}
			if($@CurrentEvent == 13 && checkcart()){
					next;
					mes "[ Event Management ]","Seems you have cart, remove you're cart and come back.";
					close;
			}
			fabre = 0;
			callfunc("dispell");
			warp .EnterMap$[$@CurrentEvent],.EnterX[$@CurrentEvent],.EnterY[$@CurrentEvent];
		}
	}
	close;
	
	
	//==================================
OnEndEvent:	//-- End Event
//==================================

	if($@CurrentEvent == 0){
		mes "[ Event Management ]","Sorry no event is running.";
		close;
	}
	if($@CurrentEvent < 0)
		$@CurrentEvent *= -1;
	switch($@CurrentEvent){
		default:
			mapwarp .EnterMap$[$@CurrentEvent],"payon",155,215;
		case 1:	case 8:	case 7: case 15:
			break;
		case 2:	case 6:	case 9:
		case 16:	case 17:
			killmonsterall .EnterMap$[$@CurrentEvent];
			mapwarp .EnterMap$[$@CurrentEvent],"payon",155,215;
			break;
		case 11:
			killmonster .Map$[11],strnpcinfo(3)+"::OnShroomKilled";
			mapwarp .EnterMap$[$@CurrentEvent],"payon",155,215;
			break;
		case 12:
			killmonster .Map$[11],strnpcinfo(3)+"::OnBaphoKilled";
			mapwarp .EnterMap$[$@CurrentEvent],"payon",155,215;
			break;
		case 14:
			killmonster .Map$[14],strnpcinfo(3)+"::OnKilled";
			mapwarp .EnterMap$[$@CurrentEvent],"payon",155,215;
			break;
			
	}
	announce "Sorry a GM has stopped the "+ .EventName$[$@CurrentEvent] +".",bc_all|bc_blue;
	$@CurrentEvent = 0;
	delwaitingroom;
	end;

//==================================
		//-- Functions
//==================================

function Func_Add_Time {
	return ( ( (getarg(0) < 10)?"0":"" ) + getarg(0) + "." + ( (.StartTime < 10)?"0":"" ) + .StartTime );
}

function Func_Countdown {
	for(.@i = 2; .@i > 0; .@i--){
		announce .EventName$[$@CurrentEvent]+" will begin in "+ callfunc("F_InsertPlural",.@i,"minute") +"!",bc_all|bc_blue;
		if(.MinPlayers[$@CurrentEvent] > 1){
			if($@CurrentEvent == 1 || $@CurrentEvent == 8){
				getwaitingroomusers strnpcinfo(3);
				announce "Please type @joinevent to join, "+.@waitingroom_usercount+"/"+.MinPlayers[$@CurrentEvent]+" players have joined.",bc_all|bc_blue;
			} else	announce "Please type @joinevent to join, "+getmapusers(.EnterMap$[$@CurrentEvent])+"/"+.MinPlayers[$@CurrentEvent]+" players have joined.",bc_all|bc_blue;
		} else	announce "Please type @joinevent to join.",bc_all|bc_blue;
		if(.TestMode)
			sleep 6000;
		else	sleep 60000;
	}
	announce .EventName$[$@CurrentEvent] +" Has Begun!, "+.@waitingroom_usercount+"/"+.MinPlayers[$@CurrentEvent]+" players have joined.",bc_all|bc_blue;
	return;
}
//==================================
OnMinute00:	//- Start Events
//==================================

	if(agitcheck() || agitcheck2() || $@CurrentEvent) end;
	sleep .StartTime * 60000 + 1000;
	.@Time = gettime(4) * 24 + gettime(3);
	deletearray .register_aid;
	.register_count = 0;
	switch($EVENT_CONTROL[.@Time]){
		default:						break;
		case 1: donpcevent strnpcinfo(3)+"::OnEmpStart";	break;
		case 2: donpcevent strnpcinfo(3)+"::OnZombieStart";	break;
		case 3: donpcevent strnpcinfo(3)+"::OnDiceStart";	break;
		case 4: donpcevent strnpcinfo(3)+"::OnPvPStart";	break;
		case 5: donpcevent strnpcinfo(3)+"::OnMazeStart";	break;
		case 6: donpcevent strnpcinfo(3)+"::OnPoringStart";	break;
		case 7: donpcevent "Cluckers::OnEventStart";		break;
		case 8: donpcevent strnpcinfo(3)+"::OnLuckyStart";	break;
		case 9: donpcevent strnpcinfo(3)+"::OnBombStart";	break;
		case 10: donpcevent strnpcinfo(3)+"::OnHuntStart";	break;
		case 11: donpcevent strnpcinfo(3)+"::OnShroomStart";	break;
		case 12: donpcevent strnpcinfo(3)+"::OnBaphoStart";	break;
		case 13: donpcevent strnpcinfo(3)+"::OnCandyStart";	break;
		case 14: donpcevent strnpcinfo(3)+"::OnCountStart";	break;
		case 15: donpcevent strnpcinfo(3)+"::OnDisguiseStart";	break;
		case 16: donpcevent strnpcinfo(3)+"::OnFabreStart";	break;
		case 17: donpcevent strnpcinfo(3)+"::OnDevilStart";	break;
		case 18: donpcevent strnpcinfo(3)+"::OnSongStart";	break;
	}
	end;
	
	
	
//==================================
OnDiceStart:	//-- Dice Event 
//==================================

	mapwarp .EnterMap$[3],"payon",155,215;
	$@CurrentEvent = 3;
	for ( .@i = 0; .@i < getarraysize( .bombflag ); .@i++ )
		setmapflag .EnterMap$[5], .bombflag[.@i];
	Func_Countdown;
	$@CurrentEvent = -3;
	if(getmapusers(.EnterMap$[3]) < .MinPlayers[3]){
		mapannounce .EnterMap$[3],"Event Stopped! Not Enough Players Joined the "+.EventName$[3]+"!",bc_blue;
		mapwarp .EnterMap$[3],"payon",155,215;
		$@CurrentEvent = 0;
	} else {
		mapannounce .EnterMap$[3],"Ok the rules of "+.EventName$[3]+" are as follows",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[3],"Each player picks a box 1, 2, 3 or 4",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[3],"There will be a count down from 10 to 0",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[3],"at 0 a four sided die will be rolled",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[3],"Anyone in the box of the number rolled will be warped to town",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[3],"as well as anyone on the stairs or outside the box",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[3],"the number of players remaining will be announced",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[3],"this prosses will repeat till only one player remains",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[3],"take a few moments to fnd a box",bc_blue;
		sleep 15000;
		mapannounce .EnterMap$[3],"we will now begin, please find a box",bc_blue;
		sleep 5000;
		for(.@1234 = 0; .@1234 < 50; .@1234++){
			for(.@i = 5; .@i > 0; .@i--){
				mapannounce .EnterMap$[3],.@i+"...",bc_blue;
				sleep 1000;
			}
			.@i = rand(1,4);
			$DiceCount[.@i]++;
			mapannounce .EnterMap$[3],"0... Good Bye Box "+.@i,bc_blue;
			switch(.@i){
				case 1:	areawarp .EnterMap$[3],183,81,191,58,"payon",155,215;	break;
				case 2:	areawarp .EnterMap$[3],192,81,203,58,"payon",155,215;	break;
				case 3:	areawarp .EnterMap$[3],204,81,215,58,"payon",155,215;	break;
				case 4:	areawarp .EnterMap$[3],216,81,227,58,"payon",155,215;	break;
			}
			areawarp .EnterMap$[3],0,0,183,400,"payon",155,215;
			areawarp .EnterMap$[3],0,82,400,400,"payon",155,215;
			areawarp .EnterMap$[3],0,58,400,0,"payon",155,215;
			areawarp .EnterMap$[3],227,0,400,400,"payon",155,215;
/*
			areawarp .EnterMap$[3],182,94,228,88,"payon",155,215;	//Upper Area
			areawarp .EnterMap$[3],185,87,188,82,"payon",155,215;	//Stairs 1
			areawarp .EnterMap$[3],197,87,200,82,"payon",155,215;	//Stairs 2
			areawarp .EnterMap$[3],209,87,212,82,"payon",155,215;	//Stairs 3
			areawarp .EnterMap$[3],221,87,224,82,"payon",155,215;	//Stairs 4
*/
			if(getmapusers(.EnterMap$[3]) <= 1){
				.@1234 += 100;
			} else {
				mapannounce .EnterMap$[3],"There are "+getmapusers(.EnterMap$[3])+" Players Remaining.",bc_blue;
				mapannounce .EnterMap$[3],"Take a few moments if you want to change boxes.",bc_blue;
				sleep 20000;
			}
		}
		if(getmapusers(.EnterMap$[3])){
			addrid(5,0,.EnterMap$[3]);
			if(HP > 0 && strcharinfo(3) == .EnterMap$[3])
				Func_Prizes(getcharid(0),.EventName$[3]);
		}
		$@CurrentEvent = 0;
		mapwarp .EnterMap$[3],"payon",155,215;
	}
	for ( .@i = 6; .@i < getarraysize( .bombflag ); .@i++ )
		removemapflag .EnterMap$[5], .bombflag[.@i];
	end;	
	
	
//==================================
OnBombStart:	//-- Bombring Event
//==================================

	mapwarp .EnterMap$[9],"payon",155,215;
	$@CurrentEvent = 9;
	for ( .@i = 0; .@i < getarraysize( .bombflag ); .@i++ )
		setmapflag .EnterMap$[9], .bombflag[.@i];
	Func_Countdown;
	$@CurrentEvent = -9;
	.@totalplayers = getmapusers(.EnterMap$[9]);
	if(.@totalplayers < .MinPlayers[9]){
		mapannounce .EnterMap$[9],"Event Stopped! Not Enough Players Joined the "+.EventName$[9]+"!",bc_blue;
		mapwarp .EnterMap$[9],"payon",155,215;
	} else {
		mapannounce .EnterMap$[9],"Okay listen up, this is how it works.",bc_blue;
		sleep 2000;
		mapannounce .EnterMap$[9],"Bombrings will run rampant in this area.",bc_blue;
		sleep 2000;
		mapannounce .EnterMap$[9],"and all of them will go booooooom!",bc_blue;
		sleep 2000;
		mapannounce .EnterMap$[9],"all you have to do is avoid them and stay alive :P",bc_blue;
		sleep 2000;
		mapannounce .EnterMap$[9],"This will run for 30 seconds for 5 total rounds.",bc_blue;
		sleep 2000;
		mapannounce .EnterMap$[9],"Sooooooooooo, ready or not here they come!!!",bc_blue;
		sleep 10000;
		for(.@wave = 1; .@wave <= .Bombwaves; .@wave++){
			if(.@wave < .Bombwaves){
				mapannounce .EnterMap$[9],"Wave "+.@wave+"!",bc_blue;
			} else	mapannounce .EnterMap$[9],"FINAL WAVE!",bc_blue;
			if (.@wave * .@totalplayers < 60)
				areamonster .EnterMap$[9],48,334,71,357,"Run for you life!",1904,.@wave * .@totalplayers;
			else	areamonster .EnterMap$[9],48,334,71,357,"Run for you life!",1904,60;
			if(!getmapusers(.EnterMap$[9]))
				.@wave += 5;
			else	sleep 1500 * .Bombwaves / .@wave;
		}
		sleep 10000;
		if(getmapusers(.EnterMap$[9]) > 0){
			addrid(5,0,.EnterMap$[9]);
			if(HP == 0 && strcharinfo(3) == .EnterMap$[9])
			getitem 3105,1;
			if(HP > 0 && strcharinfo(3) == .EnterMap$[9])
				Func_Prizes(getcharid(0),.EventName$[9]);
		}
		sleep 100;
	}
	for ( .@i = 6; .@i < getarraysize( .bombflag ); .@i++ )
		removemapflag .EnterMap$[9], .bombflag[.@i];
	$@CurrentEvent = 0;
	mapwarp .EnterMap$[9],"payon",155,215;
	end;

//==================================
OnHuntStart:	//-- Man Hunt Event
//==================================

	mapwarp .EnterMap$[10],"payon",155,215;
	$@CurrentEvent = 10;
	pvpoff .EnterMap$[10];
	for ( .@i = 0; .@i < getarraysize( .bombflag ); .@i++ )
		setmapflag .EnterMap$[10], .bombflag[.@i];
	Func_Countdown;
	$@CurrentEvent = -10;
	if(getmapusers(.EnterMap$[10]) < .MinPlayers[10]){
		mapannounce .EnterMap$[10],"Event Stopped! Not Enough Players Joined the "+.EventName$[10]+"!",bc_blue;
	} else {
		mapannounce .EnterMap$[10],"The goal is this event is to kill the target within 60 seconds.",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[10],"The one who managed to kill the target will gain a prize",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[10],"But if the target surivived, the target will gain the prize",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[10],"Man-Hunt Event start!",bc_blue;
		for(.@round = 1; .@round <= 3; .@round++){
			if(getmapusers(.EnterMap$[10]) < 3){
				mapannounce .EnterMap$[10],"Sorry there are no longer enough players for another round",bc_blue;
			} else {
				if(.@round < 3)
					mapannounce .EnterMap$[10],"Next Round will begin in 10 seconds!",bc_blue;
				for(.@i = 0; .@i < 10; .@i++){
					if($@LastTarget == $@Target)
						$@Target = .register_aid[rand(.register_count)];
					else break;
				}
				$@Targetname$ = rid2name($@Target);
				sleep 10000;
				mapannounce .EnterMap$[10],"[Round "+.@round+"] Our target is "+$@Targetname$+"!",bc_blue;
				attachrid($@Target);
				pvpon .EnterMap$[10];
				//atcommand "#killable \""+$@Targetname$+"\"";
				atcommand "#size \""+$@Targetname$+"\" 2";
				detachrid;
				sleep 60000;
				pvpoff .EnterMap$[10];
				if($@Target != -1){
					if(attachrid($@Target) && HP > 0 && strcharinfo(3) == .EnterMap$[10])
						Func_Prizes(getcharid(0),.EventName$[10]);
				}
				attachrid($@Target);
				atcommand "#alive \""+$@Targetname$+"\"";
				//atcommand "#killable \""+$@Targetname$+"\"";
				atcommand "#size \""+$@Targetname$+"\" 0";
				detachrid;
				$@LastTarget = $@Target;
			}
		}
	}
	getitem 3105,1;
	sleep 5000;
	mapwarp .EnterMap$[10],"payon",155,215;
	$@CurrentEvent = 0;
	end;
	
	
	//==================================
OnCountStart:	//-- Monsters Counting
//==================================

	killmonster .EnterMap$[14],strnpcinfo(3)+"::OnKilled";
	$@CurrentEvent = 14;
	Func_Countdown;
	.Round = .CountRound;

OnStartCountRound:
	for(.@i = 0; .@i < getarraysize( .CountMonster ); .@i++)
		.MobCount[.@i] = 0;
	for( .@x = .CountXY[0]; .@x <= .CountXY[2]; .@x++ ){
		for( .@y = .CountXY[1]; .@y <= .CountXY[3]; .@y++ ){
			.@Summon = rand( getarraysize( .CountMonster ) );
			monster .EnterMap$[14],.@x,.@y,"Count Me",.CountMonster[.@Summon],1,strnpcinfo(3)+"::OnKilled";
			.GID = $@mobid;
			setunitdata .GID,UMOB_DMGIMMUNE,1;
			.MobCount[.@Summon]++;
			sleep 1;
		}
	}
	.Target = rand( getarraysize( .CountMonster ) );
	deletepset 1;
	defpattern 1, "([^:]+): (\\|\\d{2})?"+.MobCount[.Target]+ ".$", "OnRightCount";
	defpattern 1,"([^:]+):.*.*", "OnSpam";
	activatepset 1;
	announce "Count "+ getmonsterinfo( .CountMonster[.Target],0 )+".",bc_all|bc_blue;
	//delwaitingroom;
	//waitingroom getmonsterinfo( .CountMonster[.Target],0 ),0;
	//npctalk "Count for the Targeted Monster's Amount to Win the Game.";
	$@CurrentEvent = -14;
	initnpctimer;
	end;

OnSpammed:
	@Spam = 0;
	end;

OnSpam:
	if( getgmlevel() > 90 ) end;
	@Spam++;
	if( @Spam >= .Spam ){	// 3 Continuos Answer will trigger...
		@SpamDelay = gettimetick(2) + .Spam;
		dispbottom "SPAM Detected, your answer within next "+.Spam+" Seconds will be Ignored.";
	}
	deltimer strnpcinfo(3)+"::OnSpammed";
	addtimer ( .Spam * 1000 ),strnpcinfo(3)+"::OnSpammed";
	end;

OnRightCount:
	@Spam = 0;
	deltimer strnpcinfo(3)+"::OnSpammed";
	if( $@CurrentEvent != -14 && $@CurrentEvent != -18 ){
		message strcharinfo(0),"Sorry, there is no Event right now.";
	} else if( @SpamDelay > gettimetick(2) ){
		message strcharinfo(0),"SPAM Protection : Remain "+( @SpamDelay - gettimetick(2) )+" seconds.";
	} else if( getcharid(0) == .Winner[0] && gettimetick(2) < .Winner[1] ){
		message strcharinfo(0),"Sorry, Winner Time Penalty : Remain "+( .Winner[1] - gettimetick(2) )+" seconds.";
	} else {
		delwaitingroom;
		$@CurrentEvent = 14;
		.Round--;
		.Winner[0] = getcharid(0);
		.Winner[1] = gettimetick(2) + .Delay;
		deletepset 1;
		Func_Prizes(getcharid(0),.EventName$[14]);
		killmonster .EnterMap$[14],strnpcinfo(3)+"::OnKilled";
		if( .Round )
			donpcevent strnpcinfo(3)+"::OnStartCountRound";
		else	$@CurrentEvent = 0;

	}
	end;

OnKilled:
	end;

//==================================
OnDisguiseStart: //-- Disguise
//==================================

	//mapwarp .EnterMap$[15],"payon",155,215;
	$@CurrentEvent = 15;
	Func_Countdown;
	$@CurrentEvent = -15;
	.Round = .DisguiseRound;
	sleep 9000;
	if(getmapusers(.EnterMap$[15]) < .MinPlayers[15])
		mapannounce .EnterMap$[15],"Event Stopped! Not Enough Players Joined the "+.EventName$[15]+"!",bc_blue;
	else {
		enablenpc $@DisguiseNpc$;
		sleep 100;
		donpcevent "Disguise Event::OnStart";
		for(.@dis = 30; .@dis > 0; .@dis--){
			if(!getmapusers(.EnterMap$[15]))
				.@dis = 0;
			// mapannounce .EnterMap$[15],"There are "+(.@dis)+" Minuets Remaining",bc_blue;
			sleep 60000;
		}
		mapannounce .EnterMap$[15],"Time Is up",bc_blue;
	}
	disablenpc $@DisguiseNpc$;
	sleep 5000;
	//mapwarp .EnterMap$[15],"payon",155,215;
	$@CurrentEvent = 0;
	end;

//==================================
OnFabreStart:	//-- Fabre Event
//==================================

	killmonsterall .EnterMap$[16];
	deletearray .register_aid;
	.register_count = 0;
	mapwarp .EnterMap$[16],"payon",155,215;
	$@CurrentEvent = 16;
	pvpoff .EnterMap$[16];
	for ( .@i = 0; .@i < getarraysize( .bombflag ); .@i++ )
		setmapflag .EnterMap$[16], .bombflag[.@i];
	Func_Countdown;
	$@CurrentEvent = -16;
	if(getmapusers(.EnterMap$[16]) < .MinPlayers[16]){
		mapannounce .EnterMap$[16],"Event Stopped! Not Enough Players Joined the "+.EventName$[16]+"!",bc_blue;

		$@CurrentEvent = 0;
	} else {
		killmonsterall .EnterMap$[16];
		mapannounce .EnterMap$[16],"Rules are simple",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[16],"Kill the monsters to recive points.",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[16],"Player with the most points at the end wins.",bc_blue;
		sleep 5000;
		mapannounce .EnterMap$[16],"Event will now Begin~",bc_blue;
		monster .EnterMap$[16],0,0,"1 Point",1007,90,strnpcinfo(3)+"::OnKill_1";
		monster .EnterMap$[16],0,0,"3 Point",1008,30,strnpcinfo(3)+"::OnKill_2";
		monster .EnterMap$[16],0,0,"-2 Point",1002,70,strnpcinfo(3)+"::OnKill_3";
 		for(.@fabre = 6; .@fabre > 0; .@fabre--){
			if(getmapusers(.EnterMap$[16]) < 1) .@fabre = 0;
				mapannounce .EnterMap$[16],callfunc("F_InsertPlural",(.@fabre*10),"Second")+" Remaining.",bc_blue;
			if(.TestMode)
				sleep 5000;
			else
				sleep 10000;
		}
		killmonsterall .EnterMap$[16];
		for ( .@i = 0; .@i < .register_count; .@i++ ) {
			if ( attachrid( .register_aid[.@i] ) ) {
				.@amount = fabre;
				if ( .@amount >= .@highest ) {
					setd ".@count"+ .@amount +"["+ getarraysize( getd( ".@count"+ .@amount ) ) +"]", getcharid(3);
					.@highest = .@amount;
				}
				dispbottom "Score: "+fabre;
				fabre = 0;
			}
		}
		if ( .@size = getarraysize( getd( ".@count"+ .@highest ) ) ) {
			for ( .@i = 0; .@i < .@size; .@i++ ) {
				attachrid getd( ".@count"+ .@highest +"["+ .@i +"]" );
				Func_Prizes(getcharid(0),.EventName$[16]);
			}
			mapannounce .EnterMap$[16], "Event end, there are "+ .@size +" player having "+.@highest+" Points ! "+ .@name$,bc_blue;
		} else	mapannounce .EnterMap$[16], "Event end, nobody is a winner ... too bad", 0;
		
	}
	for ( .@i = 6; .@i < getarraysize( .bombflag ); .@i++ )
		removemapflag .EnterMap$[16], .bombflag[.@i];
	mapwarp .EnterMap$[13],"payon",155,215;
	deletearray .register_aid;
	.register_count = 0;
	$@CurrentEvent = 0;
	end;
		
OnKill_1:
	monster .EnterMap$[16],0,0,"1 Point",1007,1,strnpcinfo(3)+"::OnKill_1";
	fabre += 1;
	end;
		
OnKill_2:
	monster .EnterMap$[16],0,0,"3 Points",1008,1,strnpcinfo(3)+"::OnKill_2";
	fabre += 3;
	end;
		
OnKill_3:
	monster .EnterMap$[16],0,0,"-2 Points",1002,1,strnpcinfo(3)+"::OnKill_3";
	fabre -= 2;
	end;
	
	
//==================================
OnPCLogOutEvent:	//-- On Logout
//==================================

	if($@CurrentEvent == -10 && getcharid(3) == $@Target){
		mapannounce .EnterMap$[10],"The target has logged out of this game. This round will be nulled.",bc_blue;
		$@Target = -1;
	} else if($@CurrentEvent == -13 || $@CurrentEvent == 13){
		for(.@i = 0; .@i < .register_count; .@i++)
			if(getcharid(3) == .register_aid[.@i])
				deletearray .register_aid[.@i], 1;
	}
	end;

//==================================
OnPCDieEvent:	//-- On player death
//==================================

	if(($@CurrentEvent == -4 && strcharinfo(3) == .EnterMap$[4]) || ($@CurrentEvent == -2 && strcharinfo(3) == .EnterMap$[2]))
		warp "payon",155,215;
	if($@CurrentEvent == -10 && getcharid(3) == $@Target ){
		Func_Prizes(getcharid(0,rid2name(killerrid)),.EventName$[10]);
		$@Target = -1;
	}
	end;

//==================================
OnTimer1800000:	// Timer for Monster Count and Song
//==================================

	if($@CurrentEvent == -14 || $@CurrentEvent = -18 || $@CurrentEvent == 14 || $@CurrentEvent = 18){
		if($@CurrentEvent < 0)
			.@ce = -1 * $@CurrentEvent;
		mapannounce .EnterMap$[.@ce],"["+.EventName$[.@ce]+"]: Event has come to and end.", bc_map;	
		.Round = .SongID = .Target = $@CurrentEvent = 0;
		killmonster .EnterMap$[14],strnpcinfo(3)+"::OnKilled";
		$@CurrentEvent = 0;
		delwaitingroom;
		deletepset 1;
	}
	stopnpctimer;
	end;

//==================================
OnInit:		//-- Config
//==================================

// -------------------
//  Rewards
// -------------------

	// Recive rewards via
	// [0] = Direct to inv
	// [1] = Mail / RoDex
	$@Mail = 0;	

	// Does not support multiple item rewards
	// Rewards are Mailed to winners
	// Ro Dex Supports 5 Items
	// Old Mail & Direct DO NOT support multiple items
	setarray $@RewardID	,3105,0,0,0,0;
	setarray $@RewardQNT	,    5,0,0,0,0;
	$@RewardZeny = 0;
	
	
	// -------------------
//  At Commands
// -------------------
	// Run Event Command to manually run event
	bindatcmd("rundice",strnpcinfo(3)+"::OnDiceStart",1,99);
	// Run Event Command to manually run event
	bindatcmd("runfabre",strnpcinfo(3)+"::OnFabreStart",1,99);
		// Run Event Command to manually run event
	bindatcmd("runbomb",strnpcinfo(3)+"::OnBombStart",1,99);
		// Run Event Command to manually run event
	bindatcmd("runhunt",strnpcinfo(3)+"::OnHuntStart",60,99);
		// Run Event Command to manually run event
	bindatcmd("runcount",strnpcinfo(3)+"::OnCountStart",60,99);
		// Run Event Command to manually run event
	bindatcmd("rundisguise",strnpcinfo(3)+"::OnDisguiseStart",1,99);
	
	// End Event Command to manually end event
	bindatcmd("stopevent",strnpcinfo(3)+"::OnEndEvent",60,99);

	// Randomize Event Command to randomize event scedule
	//bindatcmd("randevent",strnpcinfo(3)+"::OnRandomize",60,99);

	// Clear Event Command to wipe event scedule
	//bindatcmd("wipeevent",strnpcinfo(3)+"::OnClear",60,99);

	// Remove Event Command to wipe event scedule
	//bindatcmd("removeevent",strnpcinfo(3)+"::OnRemoveType",60,99);

	// Add Event Command to wipe event scedule
	//bindatcmd("addevent",strnpcinfo(3)+"::OnRemoveType",60,99);

	// Debugmode Toggle Command
	//bindatcmd("testevent",strnpcinfo(3)+"::OnTestMode",60,99);

	// Join Event Command
	bindatcmd("joinevent",strnpcinfo(3)+"::OnJoinEvent",0,99);
	bindatcmd("join",strnpcinfo(3)+"::OnJoinEvent",0,99);
	bindatcmd("je",strnpcinfo(3)+"::OnJoinEvent",0,99);
	
	
	
		// How Many Mins after the hour till event starts
	// Don't forget 5 mins for Func_Countdown
	.StartTime = 25;

	// Event Names
	setarray .EventName$[1],
		"Emperium Event","Zombie Survival","Dice Event","PvP Event","Maze Event",
		"Find The Poring","Cluckers","Lucky Pick","Bombring Event","Manhunt",
		"Find The Mushroom","Find The Baphomet","Grab the Candy!","Monsters Counting","Disguise Event",
		"Fabre Event","Devil Square","What's the BGM";

	// Colored Event Names
	setarray .ColorName$[1],
		"^00CCCC"+.EventName$[1]+"^000000",	"^CC00CC"+.EventName$[2]+"^000000",	"^00CC00"+.EventName$[3]+"^000000",	"^CC0000"+.EventName$[4]+"^000000",	"^00CC00"+.EventName$[5]+"^000000",
		"^00CCCC"+.EventName$[6]+"^000000",	"^00CC00"+.EventName$[7]+"^000000",	"^00CC00"+.EventName$[8]+"^000000",	"^CC00CC"+.EventName$[9]+"^000000",	"^CC0000"+.EventName$[10]+"^000000",
		"^00CCCC"+.EventName$[11]+"^000000",	"^00CCCC"+.EventName$[12]+"^000000",	"^00CC00"+.EventName$[13]+"^000000",	"^00CC00"+.EventName$[14]+"^000000",	"^00CC00"+.EventName$[15]+"^000000",
		"^00CCCC"+.EventName$[16]+"^000000",	"^CC00CC"+.EventName$[17]+"^000000",	"^00CCCC"+.EventName$[18]+"^000000";

	// Min Players
	//	Cluckers, Mushroom & Monter Counting don't check
	setarray .MinPlayers[1],
		2,1,2,3,2,
		1,0,3,3,4,
		0,0,2,0,0,
		3,3,0;

	// @JoinEvent warp points
	setarray .EnterMap$[1],
		"prontera","1@zombie","quiz_01","pvp_n_1-5","maze",
		"pvp_n_1-5","prontera","prontera","quiz_02","pvp_n_1-5",
		"prontera","prontera","pvp_n_1-5","payon","payon",
		"pvp_n_1-5","pvp_n_1-5","prontera";

	setarray .EnterX[1],
		161,  0,205,  0,371,
		  0,155,161, 59,  0,
		  0,  0,  0,157,  170,
		  0, 100,156;

	setarray .EnterY[1],
		168,  0, 92,  0,143,
		  0,227,168,345,  0,
		  0,  0,  0,171,  205,
		  0, 100,164;

	// Zombies Spawned per Wave
	// MobID1,Quantity1{,MobID2,Quantity2{,{....}}
	//	Quantity is multiplied by number of waves
	//	so 10 will become 100 in last wave
	//	and mobs are not killed between
	//	so 10 will have 550 spawned in last wave
	setarray .Zombies,1290,10,1423,5,1298,1;

	// Fake Poring Names
	setarray .Poring$,	"Porjng","P0ring","Porlng","Porimg","Porinq",
				"Poporing","This One","Right","Kill Me","Poning",
				"qoring","Pooring","Pouring","Polling","~Poring~",
				"Winner","Prize","Porirg","Paring","Notice Me Senpai",
				"Pickle","Puring","Ponirg","Poning","P o r i n g";

	// Number of poring to Spawn in Find the poring Event
	.PoringSpawn = 2;

	// Poring and Bombring and Grab the Candy Mapflags
	setarray .bombflag,mf_noequip,mf_notoken,mf_nosave,mf_nowarp,mf_nowarpto,mf_nomemo,mf_noteleport,mf_noreturn,mf_nobranch,mf_nomobloot,mf_nomvploot,mf_noskill,mf_noitemconsumption,mf_nodrop,mf_notrade,mf_nopenalty;

	// Devil Square Mapflags
	setarray .devilflag,mf_nosave,mf_nowarp,mf_nowarpto,mf_nomemo,mf_noteleport,mf_noreturn,mf_notrade,mf_nopenalty,mf_nobranch,mf_nodrop,mf_nomobloot,mf_nomvploot;

	// Mushroom Event Possible Maps
	setarray .ShroomMaps$,"izlude","geffen","morocc","prontera";

	// Baphomet Event Possible Maps
	setarray .BaphoMaps$,"splendide","hugel","yuno","comodo","xmas","aldebaran","izlude","payon","geffen","morocc","prontera";

	// Number of waves in Bombporing Event
	.Bombwaves = 6;

	// Item ID used in the Grab the Candy! event
	// Best to use a custom ID
	.candy_id = 529;

	// Item ID used in the Grab the Candy! event
	// Best to use a custom ID
	.apple_id = 7821;
	
	// Monster Counting
	setarray .CountMonster,1084,1085;

	// Number of rounds for Monster Counting
	.CountRound = 3;

	// Number of rounds for Whats the BGM
	.SongRound = 3;

	// Monster Coutning Mob Spawn area
	setarray .CountXY,135,192,142,199;

	// Winners Answer Delay for Monster Counting
	set .Delay,30;

	// Spam Prevention for Monster Counting
	set .Spam,3;
	
	
		// Test mode, Shortens Coutdown timer to 30 seconds for faster testing
	// [0] = Off
	// [1] = On
	.TestMode = 0;
	
	// -------------------
//  Don't Touch Ever
// -------------------
	
	$@CurrentEvent = 0;
	if( .StartTime > 59 ) .StartTime = 59;
	if( .StartTime < 0 ) .StartTime = 0;
	setarray .Days$[0],"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday";
	end;
}



payon,175,205,3	script	Disguise Event	795,{
	if($@CurrentEvent == -15){
		if(getgmlevel() == 99)
			dispbottom $MonsterName$+"";
		input .@input$;
		if(.@input$ == $MonsterName$)
			doevent strnpcinfo(3)+"::OnCorrect";
	}
	end;

OnStart:
	.EventON = .Wait = 1;
	setnpctimer 0;
	initnpctimer;
	end;

OnTimer10000:
	if (.Change) end;
	.Wait = 0;

OnDisguise:
	if (.MVPRule) {
		.Winner = 0;
		.Monster = rand(getarraysize(.MVP));
		$MonsterName$ = getmonsterinfo(.MVP[.Monster],0);
	} else {
		.Winner = 0;
		.Monster = 1000+rand(1000,1995);
		if (compare(","+.BlackList$+"," , ","+.Monster+",") || .Monster == .LastMonster)
			goto OnDisguise;
		.LastMonster = .Monster;
		$MonsterName$ = getmonsterinfo(.Monster,0);
	}
	deletepset 1;
	defpattern 1,"([^:]+):.\\s*"+$MonsterName$+".*", "OnCorrect";
	activatepset 1;
	if (.MVPRule)
		setnpcdisplay "Disguise Event",.MVP[.Monster];
	else	setnpcdisplay "Disguise Event",.Monster;
	.Change = 1;
	setnpctimer 0;
	end;

OnTimer30000:
	.Change = 0;
	setnpcdisplay "Disguise Event",795;
	npctalk "Disguise Event : You took too long to guess what I was. Please wait 10 seconds while I disguise again.";
	specialeffect EF_DETECT2;
	set $MonsterName$,"";
	deletepset 1;
	stopnpctimer;
	setnpctimer 0;
	initnpctimer;
	end;

OnCorrect:
	if (.Winner) {
		dispbottom "Someone has already won this round.";
		end;
	}
	set .Winner,1;
	set .RoundCount,.RoundCount+1;
	deletepset 1;
	activatepset 1;
	specialeffect2 EF_SPHERE;
	getitem 3105,2;
	announce strcharinfo(0)+" is correct! I was disguised as: "+$MonsterName$+"",bc_map | bc_blue;
	if (.RoundCount >= .DisguiseRound) {
		setnpcdisplay "Disguise Event",795;
		.RoundCount = .Change = .EventON = 0;
		$@CurrentEvent = 0;
		setnpctimer 0;
		stopnpctimer;
		npctalk "Disguise Event : Thank you all for playing. That was the last round of the Disguise Event. Come play again later.";
		//mapwarp "pvp_n_1-5","payon",155,215;
		end;
	}
	setnpcdisplay "Disguise Event",795;
	.Change = 0;
	setnpctimer 0;
	end;

OnInit:
	// Npc Name
	.n$ = "[^0000FFDisguise NPC^000000]";

	// Disguise Event MVP Ruleset
	// Toggle 1/0
	// [0] Normal monsters, except blacklist
	// [1] MVPs from list
	.MVPRule = 1;

	// Number of rounds for Disguise Event
	.DisguiseRound = 5;
	$@DisguiseNpc$ = strnpcinfo(3);
	// MVP List
	setarray .MVP[0],1038,1039,1046,1059,1086,1087,1112,1115,1147,1150,1157,1159,1190,1251,1252,1272,1312,1373,
			1389,1418,1492,1511,1583,1623,1630,1646,1647,1648,1649,1650,1651,1658,1685,1688,
			1708,1719,1734,1751,1768,1779,1785,1802,1832,1871,1874,1885,1917,1980,2022,2068;

	// Blacklist
	set .BlackList$, "1003,1006,1017,1021,1022,1027,1043,1075,1136,1137,1168," + 
		"1171,1172,1173,1181,1187,1210,1217,1218,1222,1223,1224,1225,1226,1227,1228," + 
		"1233,1284,1407,1411,1414,1495,1501,1900,1996,2000,2001,2002,2003,2004," + 
		"2005,2006,2007,2011,2012,2025,2028,2029,2030,2031,2032,2033,2034,2035," + 
		"2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049," + 
		"2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063," + 
		"2064,2065,2066,2067,2075,2076,2077,2078,2079,2080,2081,2083,2084,2085," + 
		"2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099," + 
		"2100,2101,2012,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113," + 
		"2114,2115,2116,2117,2118,2119,2120,2121,2123,2124,2125,1496,";
		
	disablenpc $@DisguiseNpc$;
}

payon,175,200,3	itemshop	Event Shop	877,3105,14003:3,12103:35,12467:2,12466:2,7825:20,31816:250,31092:150,31299:200,25013:5,25025:5,25016:5,3009:5,3010:3,13973:5,3001:5,12411:4,12412:6