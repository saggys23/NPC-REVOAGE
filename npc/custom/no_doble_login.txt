//===== Saphira Ro Scripts ================================== 
//= No double login in one map
//===== By: ================================================== 
//= Tauro
//===== Current Version: =====================================
//= 1.1
//===== Compatible With: =====================================
//= rAthena SVN
//===== Description: =========================================
//= Avoid double login in 1 designated map and has unique_id
//= by gepard
//===== Comments: ============================================
//= Edit line 34 to use gepard authenticator or ip
//=	Edit line 73 if you use the system by ip
//=	Edit line 36 maps and loadevent maps in line 98
//= The account id that the script takes is the lowest eg: 
//= 2000055, 2000080 the id 2000080 will be the one that 
//= always ejects from the map even if it enters first. 
//= If you want to prevent these accounts from collapsing,
//= you must add the lowest id 2000055 on line 72. 
//===== Changes: =============================================
//= 1.1 Add $MapsWorks$ for prevent the script from working in 
//= other scripts that have loadevent 
//= 1.1 Update error of getmapxy for new commands
//===== Contact Info: ========================================
//= [Tauro] 
//= Discord: Trinity#7962
//============================================================
-	script	dl_map	-1,{
	end;

OnInit:
	// 1= if you have gepard 0=if you do not use gepard
	set .Gepard,1;
	// Maps for prevent the script from working in other scripts that have loadevent
	setarray $MapsWorks$[0], "pvp_y_8-2","r_road","mvp_room","guild_vs1","guild_vs4","guild_vs2","guild_vs3","guild_vs5","guildhall","aldeg_cas01","aldeg_cas02","aldeg_cas03","aldeg_cas04","aldeg_cas05","gefg_cas01","gefg_cas02","gefg_cas03","gefg_cas04","gefg_cas05","payg_cas01","payg_cas02","payg_cas03","payg_cas04","payg_cas05","prtg_cas01","prtg_cas02","prtg_cas03","prtg_cas04","prtg_cas05","arug_cas01","arug_cas02","arug_cas03","arug_cas04","arug_cas05","schg_cas01","schg_cas02","schg_cas03","schg_cas04","schg_cas05";
	end;
	
OnPCLoadMapEvent:
	if (.Gepard == 1) {
		query_sql("SELECT last_unique_id FROM `login` WHERE account_id = "+getcharid(3)+"", .@UniqueId$);
		query_sql("SELECT account_id FROM `login` WHERE last_unique_id = '"+.@UniqueId$+"'", .@CuentaId);
		for(set .@i ,0;.@i<getarraysize(.@CuentaId);set .@i,.@i+1) {
			if(attachrid(.@CuentaId[.@i])) {
				if (.@CuentaId == 2000001) {
					set .@j,0;
				} else {
					.@map$ = strcharinfo(3);
					for(set .@q,0; .@q <=getarraysize($MapsWorks$); set .@q,.@q+1){
						if (.@map$ == $MapsWorks$[.@q]){
							set .@j,.@j+1;
							set .@error,getcharid(3,strcharinfo(0));
						}
					}
				}
			}	
		}
		detachrid;
	
	attachrid .@error;
	if(.@j > 1) {
		dispbottom "Sorry, Double Login is not allowed on this map.";
		warp "prontera",156,183;
	}

	end;
	} else {
		query_sql("SELECT last_ip FROM `login` WHERE account_id = "+getcharid(3)+"", .@UltimaIp$);
		query_sql("SELECT account_id FROM `login` WHERE last_ip = '"+.@UltimaIp$+"'", .@CuentaId);
		for(set .@i ,0;.@i<getarraysize(.@CuentaId);set .@i,.@i+1) {
			if(attachrid(.@CuentaId[.@i])) {
//if .Gepard is 0 add id of accounts to which the system will not affect, brothers, couple, gms, etc ... .@CuentaId == accountId
				if (.@CuentaId == 2000000 || .@CuentaId == 2000156 || .@CuentaId == 2000249 || .@CuentaId == 2000031 || .@CuentaId == 2000050 || .@CuentaId == 2000021 || .@CuentaId == 2000073 || .@CuentaId == 2000029) {
					set .@j,0;
				} else {
					.@map$ = strcharinfo(3);
					for(set .@q,0; .@q <=getarraysize($MapsWorks$); set .@q,.@q+1){
						if (.@map$ == $MapsWorks$[.@q]){
							set .@j,.@j+1;
							set .@error,getcharid(3,strcharinfo(0));
						}
					}
				}
			}	
		}
		detachrid;
	
	attachrid .@error;
	if(.@j > 1) {
		dispbottom "Lo siento, en este mapa no está permitido el Double Login.";
		warp "prontera",156,183;
	}

	end;
	}
}

//loadevents
guild_vs2	mapflag	loadevent
guild_vs1	mapflag	loadevent
guild_vs3	mapflag	loadevent
guild_vs4	mapflag	loadevent
guild_vs5	mapflag	loadevent
pvp_y_8-2	mapflag	loadevent
mvp_room	mapflag	loadevent
r_road	mapflag	loadevent