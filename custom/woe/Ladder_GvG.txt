//	add all the maps that you want this script to trigger ... all pvp and event maps perhaps ?
//	but if you already enable "all" maps, then can comment all these
aldeg_cas01	mapflag	loadevent
aldeg_cas02	mapflag	loadevent
aldeg_cas03	mapflag	loadevent
aldeg_cas04	mapflag	loadevent
aldeg_cas05	mapflag	loadevent
gefg_cas01	mapflag	loadevent
gefg_cas02	mapflag	loadevent
gefg_cas03	mapflag	loadevent
gefg_cas04	mapflag	loadevent
gefg_cas05	mapflag	loadevent
payg_cas01	mapflag	loadevent
payg_cas02	mapflag	loadevent
payg_cas03	mapflag	loadevent
payg_cas04	mapflag	loadevent
payg_cas05	mapflag	loadevent
prtg_cas01	mapflag	loadevent
prtg_cas02	mapflag	loadevent
prtg_cas03	mapflag	loadevent
prtg_cas04	mapflag	loadevent
prtg_cas05	mapflag	loadevent
arug_cas01	mapflag	loadevent
arug_cas02	mapflag	loadevent
arug_cas03	mapflag	loadevent
arug_cas04	mapflag	loadevent
arug_cas05	mapflag	loadevent
schg_cas01	mapflag	loadevent
schg_cas02	mapflag	loadevent
schg_cas03	mapflag	loadevent
schg_cas04	mapflag	loadevent
schg_cas05	mapflag	loadevent

-	script	DOTAGVG	-1,{
OnInit:
// Config
	set .sound, 0; // soundeffect : 0 - disable, 1 - play soundeffect to all players on map, 2 - play soundeffect to an area around the killer, 3 - play soundeffect to killer only
	set .announce, 0; // announce to : 0 - global, 1 - map
	set .announcemap, 1; // announce the map name in the announcement ? : 0 - off, 1 - on

	set .announcekill, 1; // announce who pawn who's head : 0 - off, 1 - on
	set .msg_die, 0; // show message who kill you when die : 0 - off, 1 - on
	set .msg_kill, 0; // show message you kill who when killed someone : 0 - off, 1 - on

	set .gmnokill, 0; // GMs are not suppose to kill players. A GM with <this number> level or higher will do nothing. IF set to 60, GM60 and above kill any player will not get anything : 0 - off

	set .killingspree, 3;
	set .dominating, 4;
	set .megakill, 5;
	set .unstoppable, 6;
	set .wickedsick, 7;
	set .monsterkill, 8;
	set .godlike, 9;
	set .holyshit, 10;
	set .continue, 1; // after beyond-godlike, every <this number> kills will make announcement again

	set .owned, 5; // how many times the party/guild has to kill to announce ownage
	set .owncontinue, 1; // after ownage, every <this number> party/guild cumulative kills will make ownage announce again

	set .min_gm_menu, 90; // minimum level of GM can use the GM menu on ladder npc

	set .showtotal, 10; // show the length of ladder. Note : Maximum value = 128
	set .showpage, 10;	// set the views per page. Note : Maximum value = 128
	set .loweststreak, 3; // mininum streak count allow to show in highest streak ladder. Default 3 means must at least have killing spree streak to display in ladder
	set .lowestownage, 5; // mininum ownage count allow to show in longest ownage ladder. Default 5 means must at least have 5 ownage counts to display in ladder

	setarray .maptrigger$, // only these maps will trigger this script
		//"all", // uncomment this to allow load all maps
		"aldeg_cas01",
		"aldeg_cas02",
		"aldeg_cas03",
		"aldeg_cas04",
		"aldeg_cas05",
		"gefg_cas01",
		"gefg_cas02",
		"gefg_cas03",
		"gefg_cas04",
		"gefg_cas05",
		"payg_cas01",
		"payg_cas02",
		"payg_cas03",
		"payg_cas04",
		"payg_cas05",
		"prtg_cas01",
		"prtg_cas02",
		"prtg_cas03",
		"prtg_cas04",
		"prtg_cas05",
		"arug_cas01",
		"arug_cas02",
		"arug_cas03",
		"arug_cas04",
		"arug_cas05",
		"schg_cas01",
		"schg_cas02",
		"schg_cas03",
		"schg_cas04",
		"schg_cas05";

//	anti-sit-killer system
	// a player must kill another player with this minimum <this number> base level to get the announcement and in the ladder.
	// Otherwise only have streak ended announcement and killed player's streak reset.
	// Its possible for a level 1 novice to kill a level 99 player and he/she will still get in the ladder
	// but a level 99 kill a level 1 player will get nothing
	// 0 - off this system ( default is 55, pk setting )
	set .lvltokill, 0;

	// when a player kill another same player <this number> times in a row, the player is warp back to save point.
	// and the player's streak, kills, and ownage count will deduct accordingly
	// 0 - off this system
	set .counttopunish, 0;

	// minimum level range to kill another player
	// eg. when set to 20, player level 99 needs to kill another player with minimum level of 79 to get announcement and increase the kill rank.
	// but a player with base level 50 kills a level 99 will also get the announcement
	// higher base level cannot kill lower level, but lower level can kill higher level
	// 0 - off this system
	set .minlvlrange, 0;


// Config ends ------------------------------------------------------------------------------------------

//	to prevent bug happen
	if ( .announce < 0 || .announce > 1 ) set .announce, 0;
	if ( .continue < 1 ) set .continue, 1;
	if ( .owncontinue < 1 ) set .owncontinue, 1;
	if ( .gmnokill <= 0 ) set .gmnokill, 100;
	if ( .lvltokill <= 1 ) set .lvltokill, 0;
	if ( .counttopunish <= 1 ) set .counttopunish, 0;
	set .maptriggersize, getarraysize(.maptrigger$);
	end;

//	script start.
OnPCKillEvent:
	if ( getgmlevel() >= .gmnokill ) end;
	getmapxy .@map$, .@x, .@y, 1;
	if ( .maptrigger$ != "all" ) {
		for ( set .@i, 0; .@i < .maptriggersize; set .@i, .@i +1 ) {
			if ( .@map$ == .maptrigger$[.@i] ) break;
		}
		if ( .@i == .maptriggersize ) end;
	}
	attachrid killedrid;
	if ( killerrid != getcharid(3) && ( .msg_die || .msg_kill ) ) {
		if ( .msg_die ) message strcharinfo(0),"You have been killed by "+ rid2name(killerrid);
		if ( .msg_kill ) message rid2name(killerrid),"You just killed "+ strcharinfo(0);
	}
	if ( @PlayersKilledStreak_gvg >= .holyshit )
		set .@streakname$,"Beyond Godlike";
	else if ( @PlayersKilledStreak_gvg >= .godlike )
		set .@streakname$,"Godlike";
	else if ( @PlayersKilledStreak_gvg >= .monsterkill )
		set .@streakname$,"Monster Kill";
	else if ( @PlayersKilledStreak_gvg >= .wickedsick )
		set .@streakname$,"Wicked Sick";
	else if ( @PlayersKilledStreak_gvg >= .unstoppable )
		set .@streakname$,"Unstoppable";
	else if ( @PlayersKilledStreak_gvg >= .megakill )
		set .@streakname$,"Mega-kill";
	else if ( @PlayersKilledStreak_gvg >= .dominating )
		set .@streakname$,"Dominating";
	else if ( @PlayersKilledStreak_gvg >= .killingspree )
		set .@streakname$,"Killing Spree";
	if ( @PlayersKilledStreak_gvg >= .killingspree && killerrid == getcharid(3) )
		announce strcharinfo(0) +" has ended "+( (sex)?"him":"her" )+" own "+ .@streakname$ +"["+ @PlayersKilledStreak_gvg +"] streak "+( (.announcemap)?("at "+ .@map$):""),16|.announce;
	else if ( @PlayersKilledStreak_gvg >= .killingspree )
		announce rid2name(killerrid) +" has ended "+ strcharinfo(0) +"'s "+ .@streakname$ +"["+ @PlayersKilledStreak_gvg +"] streak "+( (.announcemap)?("at "+ .@map$):""),16|.announce;
	else if ( .announcekill && killerrid != getcharid(3) )
		announce rid2name(killerrid) +" has pawned "+ strcharinfo(0) +"'s head "+( (.announcemap)?("at "+ .@map$):""),16|.announce;
	set @PlayersKilledStreak_gvg,0;
	set @dota_sql_deaths_gvg, @dota_sql_deaths_gvg +1;
	set @dota_multikills,0;
	query_sql "replace into pvpladder_gvg values ( "+ getcharid(0) +", '"+ escape_sql(strcharinfo(0)) +"', "+ @dota_sql_streaks_gvg +", "+ @dota_sql_kills_gvg +", "+ @dota_sql_deaths_gvg +", from_unixtime("+ @dota_sql_streaktime_gvg +") )";
	query_sql( "SELECT `char_id`, `guild_id` FROM `char` WHERE `name` = '"+rid2name(killerrid)+"'", .CharID, .GuildID );
	query_sql( "SELECT `ID`, `char_id`, `playername`, `date`, `kills` FROM `mostkill_gvg` WHERE `char_id` = '"+.CharID+"' ORDER BY `ID` DESC LIMIT 1", .User, .UserID, .UserName$, .UserDate, .UserKills );
	set .DateToday, gettimestr("%m%d%Y",21);
	set .TotalKills, .UserKills+1;
	if(.UserID == .CharID && .UserDate == .DateToday){
		query_sql("UPDATE `mostkill_gvg` SET `kills` = '"+.TotalKills+"' WHERE `char_id` = '"+.CharID+"' AND `date` = '"+.DateToday+"'");
		goto L_Continue;
		end;
	}else
		query_sql("INSERT INTO `mostkill_gvg` (`ID`,`char_id`,`playername`,`guild_id`,`date`,`kills`) VALUES (NULL, '"+.CharID+"', '"+rid2name(killerrid)+"', '"+.GuildID+"', '"+.DateToday+"', '1')");
L_Continue:
	set .@killed_gid, getcharid(2);
	if ( .@killed_gid ) {
		setd ".dota_sql_"+ .@killed_gid +"_c", 0;
		if ( getd(".dota_sql_"+ .@killed_gid +"_h") )
			query_sql "replace into ownladder_gvg values ( "+ .@killed_gid +", '"+ escape_sql(getguildname(.@killed_gid)) +"', "+ getd(".dota_sql_"+ .@killed_gid +"_c") +", "+ getd(".dota_sql_"+ .@killed_gid +"_h") +", from_unixtime("+ getd(".dota_sql_"+ .@killed_gid +"_t") +") )";
	}
	if ( killerrid == getcharid(3) || baselevel < .lvltokill ) end;
	if ( .minlvlrange ) set .@killedlvl, baselevel;
	attachrid killerrid;
	if ( .minlvlrange && .@killedlvl + .minlvlrange < baselevel ) end;
	if ( .counttopunish ) {
		if ( @sitkillminute != gettime(2) ) {
			deletearray @sitkillid, 128;
			deletearray @sitkilltimes, 128;
			set @sitkillminute, gettime(2);
		}
		set .@sitkillsize, getarraysize(@sitkillid);
		for ( set .@i,0; .@i < .@sitkillsize; set .@i, .@i +1 ) {
			if ( @sitkillid[.@i] != killedrid ) continue;
			else {
				set @sitkilltimes[.@i], @sitkilltimes[.@i] +1 ;
				if ( @sitkilltimes[.@i] >= .counttopunish ) {
					warp "SavePoint",0,0;
					announce strcharinfo(0) +" , Stop killing "+ rid2name(killedrid) + " !!!",0;
					debugmes strcharinfo(0) +" is sit-killing "+ rid2name(killedrid) +" for "+ @sitkilltimes[.@i] + " times";
					logmes "is sit-killing "+ rid2name(killedrid) +" for "+ @sitkilltimes[.@i] +" times";
					if ( @PlayersKilledStreak_gvg == @dota_sql_streaks_gvg ) {
						set @dota_sql_streaks_gvg, @dota_sql_streaks_gvg +1 - .counttopunish;
						set @dota_sql_streaktime_gvg, gettimetick(2);
					}
					set @PlayersKilledStreak_gvg, @PlayersKilledStreak_gvg +1 - .counttopunish;
					set @dota_sql_kills_gvg, @dota_sql_kills_gvg +1 - .counttopunish;
					query_sql "replace into pvpladder_gvg values ( "+ getcharid(0) +", '"+ escape_sql(strcharinfo(0)) +"', "+ @dota_sql_streaks_gvg +", "+ @dota_sql_kills_gvg +", "+ @dota_sql_deaths_gvg +", from_unixtime("+ @dota_sql_streaktime_gvg +") )";
					set .@killer_gid, getcharid(2);
					if ( .@killer_gid ) {
						if ( getd(".dota_sql_"+ .@killer_gid +"_c") == getd(".dota_sql_"+ .@killer_gid +"_h") ) {
							setd ".dota_sql_"+ .@killer_gid +"_h", getd(".dota_sql_"+ .@killer_gid +"_h") +1 - .counttopunish;
							setd ".dota_sql_"+ .@killer_gid +"_t", gettimetick(2);
						}
						setd (".dota_sql_"+ .@killer_gid +"_c"), getd(".dota_sql_"+ .@killer_gid +"_c") +1 - .counttopunish;
						query_sql "replace into ownladder_gvg values ( "+ .@killer_gid +", '"+ escape_sql(getguildname(.@killer_gid)) +"', "+ getd(".dota_sql_"+ .@killer_gid +"_c") +", "+ getd(".dota_sql_"+ .@killer_gid +"_h") +", from_unixtime("+ getd(".dota_sql_"+ .@killer_gid +"_t") +") )";
					}
					end;
				}
				break;
			}
		}
		if ( .@i == .@sitkillsize ) {
			set @sitkillid[.@i], killedrid;
			set @sitkilltimes[.@i], 1;
		}
	}
	set @PlayersKilledStreak_gvg, @PlayersKilledStreak_gvg +1 ;
	set @dota_sql_kills_gvg, @dota_sql_kills_gvg +1 ;
	if ( @PlayersKilledStreak_gvg > @dota_sql_streaks_gvg ) {
		set @dota_sql_streaks_gvg, @PlayersKilledStreak_gvg;
		set @dota_sql_streaktime_gvg, gettimetick(2);
	}
	query_sql "replace into pvpladder_gvg values ( "+ getcharid(0) +", '"+ escape_sql(strcharinfo(0)) +"', "+ @dota_sql_streaks_gvg +", "+ @dota_sql_kills_gvg +", "+ @dota_sql_deaths_gvg +", from_unixtime("+ @dota_sql_streaktime_gvg +") )";
	if ( @PlayersKilledStreak_gvg == .killingspree )
		setarray .@streakname$,"killingspree.wav","is on a KILLING SPREE","!";
	else if ( @PlayersKilledStreak_gvg == .dominating )
		setarray .@streakname$,"dominating.wav","is DOMINATING","!";
	else if ( @PlayersKilledStreak_gvg == .megakill )
		setarray .@streakname$,"megakill.wav","has a MEGA KILL","!";
	else if ( @PlayersKilledStreak_gvg == .unstoppable )
		setarray .@streakname$,"unstoppable.wav","is UNSTOPPABLE","!!";
	else if ( @PlayersKilledStreak_gvg == .wickedsick )
		setarray .@streakname$,"wickedsick.wav","is WICKED SICK","!!";
	else if ( @PlayersKilledStreak_gvg == .monsterkill )
		setarray .@streakname$,"monsterkill.wav","has a MONSTER KILL","!!";
	else if ( @PlayersKilledStreak_gvg == .godlike )
		setarray .@streakname$,"godlike.wav","is GODLIKE","!!!";
	else if ( @PlayersKilledStreak_gvg >= .holyshit && ( (@PlayersKilledStreak_gvg - .holyshit) % .continue == 0 ) )
		setarray .@streakname$,"holyshit.wav","is BEYOND GODLIKE",". Someone KILL "+( (sex)?"HIM":"HER" ) +"!!!!!!";
	if ( .@streakname$[1] != "" ) {
		announce strcharinfo(0) +" "+ .@streakname$[1] +"["+ @PlayersKilledStreak_gvg +"] "+( (.announcemap)?("at "+ .@map$):"") + .@streakname$[2],16|.announce;
		if ( .sound == 1 ) soundeffectall .@streakname$[0],0,.@map$;
		else if ( .sound == 2 ) soundeffectall .@streakname$[0],0;
		else if ( .sound == 3 ) soundeffect .@streakname$[0],0;
	}
	set @dota_multikills, @dota_multikills + 1;
	deltimer "DOTAGVG::OnStreakReset";
	addtimer 18000,"DOTAGVG::OnStreakReset";
	set .@killer_gid, getcharid(2);
	if ( .@killer_gid && .@killer_gid != .@killed_gid ) {
		setd ".dota_sql_"+ .@killer_gid +"_c", getd(".dota_sql_"+ .@killer_gid +"_c") +1 ;
		if ( getd(".dota_sql_"+ .@killer_gid +"_c") > getd(".dota_sql_"+ .@killer_gid +"_h") ) {
			setd ".dota_sql_"+ .@killer_gid +"_h", getd(".dota_sql_"+ .@killer_gid +"_c");
			setd ".dota_sql_"+ .@killer_gid +"_t", gettimetick(2);
		}
		query_sql "replace into ownladder_gvg values ( "+ .@killer_gid +", '"+ escape_sql(getguildname(.@killer_gid)) +"', "+ getd(".dota_sql_"+ .@killer_gid +"_c") +", "+ getd(".dota_sql_"+ .@killer_gid +"_h") +", from_unixtime("+ getd(".dota_sql_"+ .@killer_gid +"_t") +") )";
	}
	set .@dota_multikills, @dota_multikills;
	set .@origin, getcharid(3);
	sleep 1500;
	if ( .@killer_gid && .@killer_gid != .@killed_gid && getd(".dota_sql_"+ .@killer_gid +"_c") >= .owned && ( ( getd(".dota_sql_"+ .@killer_gid +"_c") - .owned ) % .owncontinue == 0 ) ) {
		if ( .announce ) mapannounce .@map$, "The guild ["+ getguildname(.@killer_gid) +"] is OWNING["+ getd(".dota_sql_"+ .@killer_gid +"_c") +"] !!!",16;
		else announce "The guild ["+ getguildname(.@killer_gid) +"] is OWNING["+ getd(".dota_sql_"+ .@killer_gid +"_c") +"] !!!",16;
		if ( .sound == 1 ) soundeffectall "ownage.wav",0,.@map$;
		else if ( .sound == 2 ) soundeffectall "ownage.wav",0;
		else if ( .sound == 3 && attachrid(.@origin) ) soundeffect "ownage.wav",0;
	}
	sleep 1250;
	if ( !attachrid(.@origin) ) end;
	if ( .@dota_multikills == 2 ) {
		if ( .announce ) mapannounce .@map$, strcharinfo(0) +" just got a Double Kill !",16;
		else announce strcharinfo(0) +" just got a Double Kill !",16;
		if ( .sound == 1 ) soundeffectall "doublekill.wav",0,.@map$;
		else if ( .sound == 2 ) soundeffectall "doublekill.wav",0;
		else if ( .sound == 3 ) soundeffect "doublekill.wav",0;
	}
	else if ( .@dota_multikills == 3 ) {
		if ( .announce ) mapannounce .@map$, strcharinfo(0) +" just got a Triple Kill !!!",16;
		else announce strcharinfo(0) +" just got a Triple Kill !!!",16;
		if ( .sound == 1 ) soundeffectall "triplekill.wav",0,.@map$;
		else if ( .sound == 2 ) soundeffectall "triplekill.wav",0;
		else if ( .sound == 3 ) soundeffect "triplekill.wav",0;
	}
	else if ( .@dota_multikills == 4 ) {
		if ( .announce ) mapannounce .@map$, strcharinfo(0) +" just got a Ultra Kill !!!",16;
		else announce strcharinfo(0) +" just got a Ultra Kill !!!",16;
		if ( .sound == 1 ) soundeffectall "ultrakill.wav",0,.@map$;
		else if ( .sound == 2 ) soundeffectall "ultrakill.wav",0;
		else if ( .sound == 3 ) soundeffect "ultrakill.wav",0;
	}
	else if ( .@dota_multikills >= 5 ) {
		if ( .announce ) mapannounce .@map$, strcharinfo(0) +" is on a Rampage !!!",16;
		else announce strcharinfo(0) +" is on a Rampage !!!",16;
		if ( .sound == 1 ) soundeffectall "rampage.wav",0,.@map$;
		else if ( .sound == 2 ) soundeffectall "rampage.wav",0;
		else if ( .sound == 3 ) soundeffect "rampage.wav",0;
	}
	end;
OnStreakReset:
	set @dota_multikills, 0;
	end;
OnWhisperGlobal:
	if ( @spam_DOTAGVG + 3 >= gettimetick(2) ) // 3 seconds interval so player don spam this command
		end;
	set @spam_DOTAGVG, gettimetick(2);
	if ( @dota_sql_kills_gvg == 0 && @dota_sql_deaths_gvg == 0 )
		query_sql "select kills, deaths, streaks, unix_timestamp(streaktime) from pvpladder_gvg where char_id = "+ getcharid(0), @dota_sql_kills_gvg, @dota_sql_deaths_gvg, @dota_sql_streaks_gvg, @dota_sql_streaktime_gvg;
	if ( @dota_sql_kills_gvg || @dota_sql_deaths_gvg ) {
		dispbottom "Your current Streak      : "+ @PlayersKilledStreak_gvg;
		dispbottom "Your total Kills               : "+ @dota_sql_kills_gvg;
		dispbottom "Your total Deaths          : "+ @dota_sql_deaths_gvg;
		dispbottom "Your highest Streak      : "+ @dota_sql_streaks_gvg;
		query_sql "select date_format( from_unixtime("+ @dota_sql_streaktime_gvg +"),'%a %e/%c/%y %r')", .@time1$;
		dispbottom "Your highest Streak on : "+ .@time1$;
	}
	else
		dispbottom "You are not in the pvp ladder yet.";
	if ( getcharid(2) ) {
		if ( getd(".dota_sql_"+ getcharid(2) +"_h") == 0 ) {
			query_sql "select currentown, highestown, unix_timestamp(owntime) from ownladder_gvg where guild_id = "+ getcharid(2), .@c, .@h, .@t;
			setd ".dota_sql_"+ getcharid(2) +"_c", .@c;
			setd ".dota_sql_"+ getcharid(2) +"_h", .@h;
			setd ".dota_sql_"+ getcharid(2) +"_t", .@t;
		}
		if ( getd(".dota_sql_"+ getcharid(2) +"_h") ) {
			dispbottom "Your guild current Own      : "+ getd(".dota_sql_"+ getcharid(2) +"_c");
			dispbottom "Your guild highest Own      : "+ getd(".dota_sql_"+ getcharid(2) +"_h");
			query_sql "select date_format( from_unixtime("+ getvariableofnpc( getd(".dota_sql_"+ getcharid(2) +"_t"), "DOTAGVG" ) +"),'%a %e/%c/%y %r')", .@time2$;
			dispbottom "Your guild highest Own on : "+ .@time2$;
		}
		else
			dispbottom "Your guild is not in the ladder yet.";
	}
	end;
OnPCLoginEvent:
	if ( .maptrigger$ != "all" ) end;
OnPCLoadMapEvent:
	if ( @dota_sql_kills_gvg == 0 && @dota_sql_deaths_gvg == 0 ) {
		if ( .maptrigger$ != "all" ) {
			getmapxy .@map$, .@x, .@y, 1;
			for ( set .@i, 0; .@i < .maptriggersize; set .@i, .@i +1 ) {
				if ( .@map$ == .maptrigger$[.@i] ) {
				sc_end SC_Intravision;
				break;
				}
			}
			if ( .@i == .maptriggersize ) end;
		}
		query_sql "select kills, deaths, streaks, unix_timestamp(streaktime) from pvpladder_gvg where char_id = "+ getcharid(0), @dota_sql_kills_gvg, @dota_sql_deaths_gvg, @dota_sql_streaks_gvg, @dota_sql_streaktime_gvg;
	}
	if ( getcharid(2) && getd(".dota_sql_"+ getcharid(2) +"_h") == 0 ) {
		query_sql "select currentown, highestown, unix_timestamp(owntime) from ownladder_gvg where guild_id = "+ getcharid(2), .@c, .@h, .@t;
		setd ".dota_sql_"+ getcharid(2) +"_c", .@c;
		setd ".dota_sql_"+ getcharid(2) +"_h", .@h;
		setd ".dota_sql_"+ getcharid(2) +"_t", .@t;
	}
	end;
}

payon,163,208,4	script	WoE Ladder	645,{
//-	script	GVG Ladder	645,{
	set .@npcname$, strnpcinfo(0);
	while (1) {
		mes "["+ .@npcname$ +"]";
		mes "Hello "+ strcharinfo(0) +"...";
		mes "If you want to I can show you your PVP stats.";
		next;
		set .@menu$, "Most Kills:Highest Streak:Longest Ownage:Own Information & Last WoE Kills:Explanation";
		if (getgmlevel() == 99) { set .@menu$, .@menu$ + ":Reset Player:Reset All"; }
		//switch ( select ( "Most Kills","Highest Streak","Longest Ownage","Own Information","Explanation" ) ) {
		switch(select(.@menu$)) {
			case 1:
				set .@nb, query_sql("select name, kills, deaths from pvpladder_gvg order by kills desc limit "+ getvariableofnpc(.showtotal,"DOTAGVG"), .@name$, .@kills, .@deaths);
				if ( .@nb == 0 ) {
					mes "["+ .@npcname$ +"]";
					mes "The ladder currently is empty.";
					next;
				}
				for ( set .@j,0; .@j < .@nb; set .@j, .@j + getvariableofnpc(.showpage,"DOTAGVG") ) {
					mes "["+ .@npcname$ +"]";
					for ( set .@i, .@j; .@i < (getvariableofnpc(.showpage,"DOTAGVG") + .@j) && .@i < .@nb; set .@i, .@i + 1 ) {
						mes "^996600"+ (.@i+1) +": ^006699"+ .@name$[.@i] +" ^00AA00["+ .@kills[.@i] +"] ^FF0000<"+ .@deaths[.@i] +">^000000";
					}
					next;
				}
				break;
			case 2:
				set .@nb, query_sql("select name, streaks, date_format(streaktime,'%a %e/%c/%y %r') from pvpladder_gvg where streaks >= "+ getvariableofnpc(.loweststreak,"DOTAGVG") +" order by streaks desc limit "+ getvariableofnpc(.showtotal,"DOTAGVG"), .@name$, .@streak, .@time$);
				if ( .@nb == 0 ) {
					mes "["+ .@npcname$ +"]";
					mes "The ladder currently is empty.";
					next;
				}
				for ( set .@j,0; .@j < .@nb; set .@j, .@j + getvariableofnpc(.showpage,"DOTAGVG") ) {
					mes "["+ .@npcname$ +"]";
					for ( set .@i, .@j; .@i < (getvariableofnpc(.showpage,"DOTAGVG") + .@j) && .@i < .@nb; set .@i, .@i + 1 ) {
						mes "^996600"+ (.@i+1) +": ^006699"+ .@name$[.@i] +" ^70AC11{"+ .@streak[.@i] +"} ^000000on :";
						mes "    ^EE8800"+ .@time$[.@i] +"^000000";
					}
					next;
				}
				break;
			case 3:
				set .@nb, query_sql("select name, highestown, date_format(owntime,'%a %e/%c/%y %r') from ownladder_gvg where highestown >= "+ getvariableofnpc(.lowestownage,"DOTAGVG") +" order by highestown desc limit "+ getvariableofnpc(.showtotal,"DOTAGVG"), .@name$, .@owned, .@time$);
				if ( .@nb == 0 ) {
					mes "["+ .@npcname$ +"]";
					mes "The ladder currently is empty.";
					next;
				}
				for ( set .@j,0; .@j < .@nb; set .@j, .@j + getvariableofnpc(.showpage,"DOTAGVG") ) {
					mes "["+ .@npcname$ +"]";
					for ( set .@i, .@j; .@i < (getvariableofnpc(.showpage,"DOTAGVG") + .@j) && .@i < .@nb; set .@i, .@i + 1 ) {
						mes "^996600"+ (.@i+1) +": ^006699"+ .@name$[.@i] +" ^00AAAA("+ .@owned[.@i] +") ^000000on :";
						mes "    ^EE8800"+ .@time$[.@i] +"^000000";
					}
					next;
				}
				break;
			case 4:
				query_sql ("SELECT `kills` from `mostkill_gvg` where `char_id` = '"+getcharid(0)+"' ORDER BY `ID` DESC LIMIT 1 ", .@killLast);
				if ( @dota_sql_kills_gvg == 0 && @dota_sql_deaths_gvg == 0 ) 					
					query_sql "select kills, deaths, streaks, unix_timestamp(streaktime), date_format(streaktime,'%a %e/%c/%y %r') from pvpladder_gvg where char_id = "+ getcharid(0), @dota_sql_kills_gvg, @dota_sql_deaths_gvg, @dota_sql_streaks_gvg, @dota_sql_streaktime_gvg, .@time1$;
				mes "["+ .@npcname$ +"]";
				if ( @dota_sql_kills_gvg == 0 && @dota_sql_deaths_gvg == 0 )
					mes "You not yet kill any player.";
				else {
					mes "Your Last WoE Total Kills :  ^70AC11{"+ .@killLast +"}^000000";
					mes "Your Current Streak : ^70AC11{"+ @PlayersKilledStreak_gvg +"}^000000";
					mes "Your Total Kills : ^00AA00["+ @dota_sql_kills_gvg +"]^000000";
					mes "Your Death Counts : ^FF0000<"+ @dota_sql_deaths_gvg +">^000000";
					if ( @dota_sql_kills_gvg || @dota_sql_streaks_gvg ) {
						mes "Highest Streak was ^70AC11{"+ @dota_sql_streaks_gvg +"}^000000 on :";
						query_sql "select date_format( from_unixtime("+ @dota_sql_streaktime_gvg +"),'%a %e/%c/%y %r')", .@time1$;
						mes "    ^EE8800"+ .@time1$ +"^000000";
					}
				}
				next;
				if ( getcharid(2) ) {
					if ( getvariableofnpc( getd(".dota_sql_"+ getcharid(2) +"_h"), "DOTAGVG" ) == 0 ) {
						query_sql "select currentown, highestown, unix_timestamp(owntime) from ownladder_gvg where guild_id = "+ getcharid(2), .@c, .@h, .@t;
						set getvariableofnpc( getd(".dota_sql_"+ getcharid(2) +"_c"), "DOTAGVG" ), .@c;
						set getvariableofnpc( getd(".dota_sql_"+ getcharid(2) +"_h"), "DOTAGVG" ), .@h;
						set getvariableofnpc( getd(".dota_sql_"+ getcharid(2) +"_t"), "DOTAGVG" ), .@t;
					}
					mes "["+ .@npcname$ +"]";
					if ( getvariableofnpc( getd(".dota_sql_"+ getcharid(2) +"_h"), "DOTAGVG" ) == 0 ) {
						mes "Your guild not yet kill any player.";
					} else {
						mes "Your guild name : ^006699"+ strcharinfo(2) +"^000000";
						mes "Current Owning  : ^00AAAA("+ getvariableofnpc( getd(".dota_sql_"+ getcharid(2) +"_c"), "DOTAGVG" ) +")^000000";
						mes "Longest Ownage was ^00AAAA("+ getvariableofnpc( getd(".dota_sql_"+ getcharid(2) +"_h"), "DOTAGVG" ) + ")^000000 on :";
						query_sql "select date_format( from_unixtime("+ getvariableofnpc( getd(".dota_sql_"+ getcharid(2) +"_t"), "DOTAGVG" ) +"),'%a %e/%c/%y %r')", .@time2$;
						mes "    ^EE8800"+ .@time2$ +"^000000";
					}
					next;
				}
				break;
			case 5:
				mes "["+ .@npcname$ +"]";
				mes "Explanation for Most Kills:";
				mes " ";
				mes "^996600Rank. ^006699NAME ^00AA00[Total Kills] ^FF0000<Deaths>^000000";
				mes " ";
				mes "--------------------------------";
				mes " ";
				mes "The ^00AA00Kills^000000 added when a player kills another player.";
				mes " ";
				mes "^FF0000Deaths^000000 count increase when a player killed by another player, or suicide (eg: Grand Cross).";
				mes " ";
				mes "A player killed by monsters, homunculus or pets will not add the kills or deaths count.";
				next;
				mes "["+ .@npcname$ +"]";
				mes "Explanation for Highest Streak:";
				mes " ";
				mes "^996600Rank. ^006699NAME ^70AC11{Highest Streak} ^000000on :";
				mes "    ^EE8800TIME^000000";
				mes " ";
				mes "--------------------------------";
				mes " ";
				mes "The ^70AC11Streak^000000 are added every time a player kills another player. It will reset upon log out, killed by another player, or suicide (eg: Sacrifice).";
				mes " ";
				mes "Then it record in the server the ^EE8800TIME^000000 when that player got that highest streak.";
				mes " ";
				mes "A player killed by monsters, homunculus or pets will not reset the streak.";
				mes " ";
				mes "--------------------------------";
				mes " ";
				mes "The numbers of straight kills to get these announcements are :";
				mes "^70AC11"+ getvariableofnpc(.killingspree,"DOTAGVG") +"^000000 : Killing Spree";
				mes "^70AC11"+ getvariableofnpc(.dominating,"DOTAGVG") +"^000000 : Dominating";
				mes "^70AC11"+ getvariableofnpc(.megakill,"DOTAGVG") +"^000000 : Mega Kill";
				mes "^70AC11"+ getvariableofnpc(.unstoppable,"DOTAGVG") +"^000000 : Unstoppable";
				mes "^70AC11"+ getvariableofnpc(.wickedsick,"DOTAGVG") +"^000000 : Wicked Sick";
				mes "^70AC11"+ getvariableofnpc(.monsterkill,"DOTAGVG") +"^000000 : Monster Kill";
				mes "^70AC11"+ getvariableofnpc(.godlike,"DOTAGVG") +"^000000 : Godlike";
				mes "^70AC11"+ getvariableofnpc(.holyshit,"DOTAGVG") +"^000000 : Beyond Godlike";
				next;
				mes "["+ .@npcname$ +"]";
				mes "Explanation for Longest Ownage:";
				mes " ";
				mes "^996600Rank. ^006699NAME ^00AAAA(Longest Ownage) ^000000on :";
				mes "    ^EE8800TIME^000000";
				mes " ";
				mes "--------------------------------";
				mes " ";
				mes "The ^00AAAAOwnage^000000 added every time any guild members killed another player that doesn't belong to his/her guild. It will reset when any of the guild member was killed by ANY player, including his/her guild member.";
				mes " ";
				mes "Then it record in the server the ^EE8800TIME^000000 when the guild got that longest ownage.";
				mes " ";
				mes "If the server went under maintainance, the current ownage will survive after the server restart.";
				mes " ";
				mes "Any guild member killed by monster, homunculus or pets will not reset the ownage count.";
				next;
				if ( getvariableofnpc(.lvltokill,"DOTAGVG") ) {
					mes "["+ .@npcname$ +"]";
					mes "You must kill another player with minimum base level of "+ getvariableofnpc(.lvltokill,"DOTAGVG") +", in order to get an announcement or get in the ladder.";
					mes " ";
					mes "It's possible for a base level 1 novice kills a base level 99 player and still can get in the ladder.";
					mes "However when a player level 99 kills a level 1 novice will get nothing.";
					next;
				}
				if ( getvariableofnpc(.counttopunish,"DOTAGVG") ) {
					mes "["+ .@npcname$ +"]";
					mes "Some noob players try to kill the same person over and over again in hope of getting his/her name appear in the ladder.";
					mes "However if you trying to do the same thing on this ladder, your name will announce to the public, and your action will be recorded into the server to notify the GMs.";
					next;
				}
				if ( getvariableofnpc(.minlvlrange,"DOTAGVG") ) {
					mes "["+ .@npcname$ +"]";
					mes "When you kill another player thats lower base level than you, the base level gap between you and that player must not more than "+ getvariableofnpc(.minlvlrange,"DOTAGVG") +".";
					mes " ";
					if ( getvariableofnpc(.minlvlrange,"DOTAGVG") >= 200)
						mes "In other words, if your base level is 500, the player you killed must be at least level "+( 500 - getvariableofnpc(.minlvlrange,"DOTAGVG") )+" then only you will get the announcement and in the ladder.";
					else if ( getvariableofnpc(.minlvlrange,"DOTAGVG") >= 70)
						mes "In other words, if your base level is 255, the player you killed must be at least level "+( 255 - getvariableofnpc(.minlvlrange,"DOTAGVG") )+" then only you will get the announcement and in the ladder.";
					else
						mes "In other words, if your base level is 99, the player you killed must be at least level "+( 99 - getvariableofnpc(.minlvlrange,"DOTAGVG") )+" then only you will get the announcement and in the ladder.";
					mes "Higher base level kills lower level gets nothing, however lower level player kills higher level will get the announcement.";
					next;
				}
				break;
			case 6:

				mes "Good day!";
				next;
				menu "Enter Name",q1,"Nope",no;
				
				q1:
				mes "Enter name that you want to reset stats";
				input .@InputName$;

				//query_sql("DELETE FROM `ragnarok_main` WHERE `name` = '"+escape_sql(.@InputName$)+"' ");
				mes "CHECK IF PLAYER RESET SUCCESSFULLY";
				close;

				no:
				mes "Well Okay";
				close;

			case 7:
				mes "Good day!";
				next;
				menu "Are you sure?",r1,"Nope",noo;
				
				r1:
				query_sql("TRUNCATE TABLE `ragnarok_main`.`pvpladder_gvg`;");
				mes "PVP LADDER RESET SUCCESSFULLY";
				close;

				noo:
				mes "Well Okay";
				close;


OnInit:
  waitingroom "WoE Ladder!",0;
  end;
		}
	}
}