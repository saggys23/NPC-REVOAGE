//===== rAthena Script ======================================= 
//= Warper
//===== Description: ========================================= 
//= A complete - but very condensed - warper script.
//===== Additional Comments: =================================
//= 1.0 Initial script By [Euphy].
//= 1.1 Added missing duplicates and fixed coordinates.
//=     Some coordinates written by [Tekno-Kanix] and [ToastOfDoom].
//= 1.2 Added new episodes and simplified functions.
//= 1.3 Added Renewal checks and Instances menu.
//=     Aligned coordinates with @go.
//= 1.4 Added new Guild Dungeons.
//= 1.4a Slight edits.
//= 1.4b Added Wolfchev's Laboratory warp.
//= 1.5 Added Lasagna ,Para Market ,WOE TE ,Instances and settings [sader1992].
//= 1.5a Fix Bifrost Tower
//============================================================

-	script	Warper	-1,{
function Go; function Disp; function Pick; function Restrict;

// ------------------- Functions -------------------
// * Go("<map>",<x>,<y>);
//	~ Warps directly to a map.
//
// * Disp("<Menu Option>",<first option>,<last option>);
// * Pick("<map_prefix>"{,<index offset>});
//	~ Dynamic menu and map selection (auto-numbered).
//	~ Fields and Dungeons must use Disp and Pick Functions.
//
// * Disp("<Option 1>:<Option 2>:<etc.>");
// * Pick("","<map1>","<map2>","<etc.>");
//	~ Manual menu and map selection (listed).
//
// * Restrict("<RE | Pre-RE>"{,<menu option numbers>});
//	~ Only allows map for Renewal or Pre-Renewal modes.
//     If menu option numbers are given, only those maps
//     will be restricted (i.e. not for "Go").
//
// Other notes:
//   ~ Array @c[] holds all (x,y) coordinates.
//   ~ Use @c[2] EXCEPT when maps begin dynamically
//	  at 0: use @c[0] and Pick() offset 1.
// --------------------------------------------------

function Go {
	set lastwarp$, getarg(0);
	set lastwarpx, getarg(1,0);
	set lastwarpy, getarg(2,0);
	warp getarg(0),getarg(1,0),getarg(2,0);
	end;
}
function Disp {
	if (getargcount() < 3)
		set @menu$, getarg(0);
	else {
		set @menu$,"";
		for (set .@i,getarg(1); .@i<=getarg(2); set .@i,.@i+1)
			set @menu$, @menu$+getarg(0)+" "+.@i+":";
	}
	return;
}
function Pick {
	set .@warp_block,@warp_block;
	set @warp_block,0;
	if((@f && .OnlyFirstFld) || (@d && .OnlyFirstDun)){
		set .@select,1;
		if(.@warp_block){
			while(.@warp_block & (1<<.@select)){
				.@select += 1;
			}
		}
	}else{
		set .@select, select(@menu$);
	}
	if (getarg(0) == "") {
		set .@i, .@select;
		set .@map$, getarg(.@i);
	} else {
		set .@i, .@select-getarg(1,0);
		set .@map$, getarg(0)+((.@i<10)?"0":"")+.@i;
	}
	if (.@warp_block & (1<<.@select)) {
		message strcharinfo(0),"This map is not enabled in "+((checkre(0))?"":"Pre-")+"Renewal.";
		end;
	}
	set .@x, @c[.@i*2];
	set .@y, @c[.@i*2+1];
	deletearray @c[0],getarraysize(@c);
	@f = false; @d = false;
	Go(.@map$,.@x,.@y);
}
function Restrict {
	if ((getarg(0) == "RE" && !checkre(0)) || (getarg(0) == "Pre-RE" && checkre(0))) {
		if (getarg(1,0)) {
			set @warp_block,0;
			for (set .@i,1; .@i<getargcount(); set .@i,.@i+1)
				set @warp_block, @warp_block | (1<<getarg(.@i));
		} else {
			message strcharinfo(0),"This map is not enabled in "+((checkre(0))?"":"Pre-")+"Renewal.";
			end;
		}
	}
	return;
}

// --------------------------------------------------
// Towns
// --------------------------------------------------
menu	"Payon",T11, "Prontera",T1, "Alberta",T2, "Morocc",T3, "Izlude",T4, "Geffen",T5,
    	"Comodo",T6, "Aldebaran",T7, "Yuno",T8, "Amatsu",T9, "Gonryun",T10;

T1: Go("prontera",155,183);
T2: Go("alberta",28,234);
T3: Go("morocc",156,93);
T4: Go("izlude",128,109);
T5: Go("geffen",119,59);
T6: Go("comodo",209,143);
T7: Go("aldebaran",140,131);
T8: Go("yuno",157,51);
T9: Go("amatsu",198,84);
T10: Go("gonryun",160,120);
T11: Go("payo2",89,116);
//T5: Go("ayothaya",208,166);
//T6: Restrict("RE");
	//Go("brasilis",196,217);
//T8: Restrict("RE");
	//Go("dewata",200,180);
//T9: Restrict("RE");
	//Go("ecl_in01",48,53);
//T10: Go("einbech",63,35);
//T11: Go("einbroch",64,200);
//T12: Restrict("RE");
	 //Go("dicastes01",198,187);
//T15: Go("hugel",96,145);
//T17: Go("jawaii",251,132);
//T18: Restrict("RE");
	// Go("lasagna",193,182);
//T19: Go("lighthalzen",158,92);
//T20: Go("louyang",217,100);
//T21: Go("xmas",147,134);
//T22: Restrict("RE");
	 //Go("malangdo",140,114);
//T23: Restrict("RE");
	 //Go("malaya",231,200);
//T24: Go("manuk",282,138);
//T25: Go("mid_camp",210,288);
//T26: Restrict("RE");
	 //Go("mora",55,146);
//T28: Go("moscovia",223,184);
//T29: Go("nameless_n",256,215);
//T30: Go("niflheim",202,174);
//T31: Go("payon",179,100);
//T32: Go("rachel",130,110);
//T33: Go("splendide",201,147);
//T34: Go("thor_camp",246,68);
//T35: Go("umbala",97,153);
//T36: Go("veins",216,123);

}
// --------------------------------------------------
//	Duplicates:
// --------------------------------------------------
//alb2trea,57,70,6	duplicate(Warper)	Warper#tre	421
alberta,28,240,4	duplicate(Warper)	Warper#alb	421
aldebaran,145,118,4	duplicate(Warper)	Warper#alde	421
amatsu,203,87,4	duplicate(Warper)	Warper#ama	421
ayothaya,209,169,6	duplicate(Warper)	Warper#ayo	421
comodo,194,158,4	duplicate(Warper)	Warper#com	421
einbech,59,38,6	duplicate(Warper)	Warper#einbe	421
einbroch,69,202,4	duplicate(Warper)	Warper#einbr	421
gef_fild10,71,339,4	duplicate(Warper)	Warper#orc	421
geffen,124,72,4	duplicate(Warper)	Warper#gef	421
glast_01,372,308,4	duplicate(Warper)	Warper#glh	421
gonryun,162,122,4	duplicate(Warper)	Warper#gon	421
hugel,101,151,4	duplicate(Warper)	Warper#hug	421
//izlu2dun,110,92,4	duplicate(Warper)	Warper#izd	421
izlude,134,150,4	duplicate(Warper)	Warper#izl	421	//Pre-RE: (132,120)
jawaii,253,138,4	duplicate(Warper)	Warper#jaw	421
lighthalzen,162,102,4	duplicate(Warper)	Warper#lhz	421
louyang,208,103,6	duplicate(Warper)	Warper#lou	421
manuk,274,146,6	duplicate(Warper)	Warper#man	421
mid_camp,216,288,4	duplicate(Warper)	Warper#mid	421
mjolnir_02,85,364,4	duplicate(Warper)	Warper#mjo	421
moc_ruins,64,164,4	duplicate(Warper)	Warper#moc	421
morocc,159,97,4	duplicate(Warper)	Warper#mor	421
moscovia,229,191,4	duplicate(Warper)	Warper#mos	421
//nameless_n,259,213,4	duplicate(Warper)	Warper#nam	421
niflheim,205,179,4	duplicate(Warper)	Warper#nif	421
pay_arche,42,134,4	duplicate(Warper)	Warper#arc	421
payon,182,108,4	duplicate(Warper)	Warper#pay	421
prontera,159,192,4	duplicate(Warper)	Warper#prt	421
prt_fild05,279,223,6	duplicate(Warper)	Warper#cul	421
rachel,135,116,4	duplicate(Warper)	Warper#rac	421
splendide,205,153,4	duplicate(Warper)	Warper#spl	421
thor_camp,249,76,4	duplicate(Warper)	Warper#thor	421
umbala,106,150,3	duplicate(Warper)	Warper#umb	421
veins,214,123,4	duplicate(Warper)	Warper#ve	421
xmas,150,136,6	duplicate(Warper)	Warper#xmas	421
yuno,162,47,4	duplicate(Warper)	Warper#yuno	421
payo2,96,113,4	duplicate(Warper)	Warper#payo2	421

// --------------------------------------------------
//	Duplicates (Renewal):
// --------------------------------------------------
brasilis,201,222,4	duplicate(Warper)	Warper#bra	421
dewata,204,186,6	duplicate(Warper)	Warper#dew	421
dicastes01,194,194,6	duplicate(Warper)	Warper#dic	421
ecl_in01,51,60,4	duplicate(Warper)	Warper#ecl	421
lasagna,196,187,4	duplicate(Warper)	Warper#las	421
malangdo,134,117,6	duplicate(Warper)	Warper#mal	421
malaya,231,204,4	duplicate(Warper)	Warper#ma	421
mora,57,152,4	duplicate(Warper)	Warper#mora	421
